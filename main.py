from aiogram import Bot, Dispatcher, executor, types
from config import telegram_token

help_command = """
<b>/start</b> - <em>–Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º</em>
<b>/help</b> - <em>—Å–ø–∏—Å–æ–∫ –∫–æ–º–º–∞–Ω–¥</em>
<b>/give</b> - <em>–º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —Å—Ç–∏–∫–µ—Ä</em>
<b>/–∫–∞—Ä—Ç–∏–Ω–∫–∞</b> - <em>–∫—Ä—É—Ç–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞</em>
<b>/location</b> - <em>–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∑–∞–¥–∞–Ω–Ω—É—é –ª–æ–∫–∞—Ü–∏—é.</em>
"""

bot = Bot(token = telegram_token) # –°–æ–∑–¥–∞–¥–∏–º –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ –±–æ—Ç
dp = Dispatcher(bot) # –ü–µ—Ä–µ–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ –±–æ—Ç

async def on_startup(_):
    print('–ë–æ—Ç –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!')

@dp.message_handler(commands='help')     # –°–æ–∑–¥–∞–µ–º –¥–∏—Å–ø–µ—Ç—á–µ—Ä –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã –≤ –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ —ç—Ç–æ 'help'
async def help(message: types.Message):  # –°–æ–∑–¥–∞–µ–º –∞—Å—Å–∏—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —ç—Ç—É –∫–æ–º–∞–Ω–¥—É, —Å–æ–∑–¥–∞–¥–∏–º message —Ç–∏–ø–∞ Message
    await message.answer(text=help_command, parse_mode="HTML")
    await message.delete()

@dp.message_handler(commands='start')
async def start(message: types.Message):
    user_name = message.from_user.first_name
    # await message.answer(f'–ü—Ä–∏–≤–µ—Ç, {user_name
    await message.answer(f'<em><b>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π {user_name}!</b> –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –ë–æ—Ç!</em>', parse_mode="HTML")
    await message.delete()

@dp.message_handler(commands='give')
async def give(message: types.Message):
    await message.answer('–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –¢—ã –Ω–∞—à–µ–ª —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–æ–º–∞–Ω–¥—É. –í –ø–æ–¥–∞—Ä–æ–∫ —è —Ç–µ–±–µ –æ—Ç–ø—Ä–∞–≤–ª—è—é –∫—Ä—É—Ç–æ–π —Å—Ç–∏–∫–µ—Ä.')
    await bot.send_sticker(message.from_user.id, sticker='CAACAgIAAxkBAAEMPOhmXZk01msvrs5upnB_IxJBDHxI0gACASYAAsqriUshdPqhh3WEnTUE')

@dp.message_handler()
async def emoji(message: types.Message):
    await message.answer(message.text + '‚ù§Ô∏è ')

@dp.message_handler()
async def send_sticker(message: types.Message):
    if message.text == "‚ù§Ô∏è  ":
        await message.answer("üñ§")

@dp.message_handler(commands='–∫–∞—Ä—Ç–∏–Ω–∫–∞')
async def send_command_image(message: types.Message):
    await bot.send_photo(chat_id=message.chat.id, photo='https://img.razrisyika.ru/kart/90/1200/358432-krutye-ochen-35.jpg')
    await message.delete()

@dp.message_handler(commands='location')
async def send_point(message: types.Message):
    await bot.send_location(chat_id=message.from_user.id, latitude=55.69115137123731, # –®–∏—Ä–æ—Ç–∞
                            longitude=37.61153088545992) # –î–æ–ª–≥–æ—Ç–∞
    await message.delete()

# @dp.message_handler()
# async def echo(message: types.Message):
#     await message.answer(text=message.text.capitalize())  # –ù–∞–ø–∏—Å–∞—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True, on_startup=on_startup)